@model Vnexpress.Models.Article

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/trangchu.cshtml";
}
<link href="~/Content/Mycss/SQLcreate.css" rel="stylesheet" />
<h2>Tạo</h2>

@using (Html.BeginForm("Create", "Articles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="create-form">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Id, new { @class = "control-label" })
        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Title, new { @class = "control-label" })
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Summary, new { @class = "control-label" })
        @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, new { @class = "control-label" })
        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, "Hình ảnh", new { @class = "control-label" })
        @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        <div id="imagePreview" class="image-preview">
            @if (!string.IsNullOrEmpty(Model?.ImageUrl))
            {
                <img src="@Model.ImageUrl" alt="Hình ảnh" class="preview-image" />
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "CategoryId", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.CategoryId, (SelectList)ViewBag.CategoryId, "-- Chọn chuyên mục --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, "UserId", new { @class = "control-label" })
        @Html.DropDownListFor(model => model.UserId, (SelectList)ViewBag.UserId, "-- Chọn tác giả --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn-create" />
        @Html.ActionLink("Trở về", "Index", null, new { @class = "btn-back" })
    </div>
</div>
}

@section Scripts {
    <script>
        document.getElementById('imageFile').addEventListener('change', function (e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (event) {
                    const preview = document.getElementById('imagePreview');
                    preview.innerHTML = `<img src="${event.target.result}" alt="Hình ảnh xem trước" class="preview-image" />`;
                };
                reader.readAsDataURL(file);
            }
        });
    </script>
}